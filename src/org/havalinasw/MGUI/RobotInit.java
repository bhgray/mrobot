/*
 * RobotInit.java
 *
 * Created on June 10, 2007, 9:22 AM
 */

package org.havalinasw.MGUI;

import java.awt.Color;
import java.io.BufferedInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Enumeration;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JColorChooser;
import javax.swing.JOptionPane;
import org.teachopensource.MGUI.Utils;

/**
 *
 * @author  bhgray
 */
@SuppressWarnings("serial")
public class RobotInit extends javax.swing.JPanel {
    
    private static final String TEMPLATE_STRING = "<<TEMPLATE>>";
    
	/** Creates new form RobotInit */
    public RobotInit() {
        initComponents();
    }
    
    public RobotInit(int id) {
        this();
        myID = id;
        numRobotLabel.setText("Setup Information for Robot #"+id);
        setName("RobotInfoCard" + id);
    }

    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {
        
    	numRobotLabel = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        xPosField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        yPosField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        numBeepersField = new javax.swing.JTextField();
        robotColorLabel = new javax.swing.JLabel();
        colorSelectButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        facingComboBox = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        classComboBox = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        newRobot = new javax.swing.JButton();
        colorLabel = new javax.swing.JLabel();

        setLayout(new java.awt.GridLayout(10, 2));

        numRobotLabel.setText("Options for Robot #");
        add(numRobotLabel);

        add(jLabel7);

        jLabel1.setText("x position:");
        add(jLabel1);

        xPosField.setColumns(5);
        xPosField.setText("1");
        add(xPosField);

        jLabel2.setText("y position:");
        add(jLabel2);

        yPosField.setColumns(5);
        yPosField.setText("1");
        add(yPosField);

        jLabel3.setText("number of beepers:");
        add(jLabel3);

        numBeepersField.setColumns(5);
        numBeepersField.setText("0");
        add(numBeepersField);

        robotColorLabel.setText("Robot color:");
        add(robotColorLabel);

        colorSelectButton.setBackground(java.awt.Color.white);
        colorSelectButton.setText("Select a color");
        colorSelectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorSelectButtonActionPerformed(evt);
            }
        });

        add(colorSelectButton);

        jLabel4.setText("Facing (N, S, E, or W):");
        add(jLabel4);

        facingComboBox.setBackground(java.awt.Color.white);
        facingComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "North", "South", "East", "West" }));
        add(facingComboBox);

        jLabel5.setText("Robot Classfile:");
        add(jLabel5);

        classComboBox.setBackground(java.awt.Color.white);
        classComboBox.setModel(getComboBoxModel());
        classComboBox.setActionCommand("");
        classComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classComboBoxActionPerformed(evt);
            }
        });

        add(classComboBox);

        jLabel6.setText("New Robot from Template (requires restart):");
        add(jLabel6);

        newRobot.setBackground(java.awt.Color.white);
        newRobot.setText("New Robot");
        newRobot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newRobotActionPerformed(evt);
            }
        });

        add(newRobot);

        add(colorLabel);

    }

    private void newRobotActionPerformed(java.awt.event.ActionEvent evt) {
        String newName = (String)JOptionPane.showInputDialog(
                    this,
                    "Choose a name for your new Robot",
                    "Create New Robot",
                    JOptionPane.PLAIN_MESSAGE,
                    null,
                    null,
                    "NewRobot");
        // copy to the bots directory
        String newBotPath = System.getProperty("user.dir") + File.separator + MRobotMain.PLUGINS_DIRECTORY + File.separator + newName + ".java";
        String templatePath = System.getProperty("user.dir") + File.separator + TEMPLATE_DIRECTORY + File.separator + TEMPLATE_NAME;
        File template = new File(templatePath);
        File destination = new File(newBotPath);
        //Utils.copyToDir(template, destination);
        
        // open the file and replace all instances of <<TEMPLATE>> with the newName
        try {
        	Utils.replaceTextInFile(templatePath, newBotPath, TEMPLATE_STRING, newName);
        } catch (IOException e) {
        	e.printStackTrace();
        }
    }

    private void classComboBoxActionPerformed(java.awt.event.ActionEvent evt) {
        botClass = (String)facingComboBox.getSelectedItem();
    }

    private void colorSelectButtonActionPerformed(java.awt.event.ActionEvent evt) {
        Color ch = JColorChooser.showDialog(this, "Robot Color Selection", new Color(255, 0, 0));
        if (ch != null) {
            colorSelectButton.setForeground(ch);
        } else {
            colorSelectButton.setForeground(new Color(255,0,0));
        }
    }

    public int getXPosition() {
        return Integer.valueOf(xPosField.getText());
    }
    
    public int getYPosition() {
        return Integer.valueOf(yPosField.getText());        
    }
    
    public int getNumBeepers() {
        return Integer.valueOf(numBeepersField.getText());
    }
    
    public String getDirection() {
        return (String) facingComboBox.getSelectedItem();
    }
    
    public Color getColor() {
        return robotColorLabel.getForeground();
    }
    
    public String getBotClass() {
        return (String)classComboBox.getSelectedItem();
    }
    
    public ComboBoxModel getComboBoxModel() {
        ArrayList<String> result = new ArrayList<String>();
        Enumeration e = MRobotMain.getAppInfo().getBotPluginNames();
        while (e.hasMoreElements()) {
            result.add((String)e.nextElement());
        }      
        return new DefaultComboBoxModel(result.toArray());
    }
    
    
    
    private javax.swing.JComboBox classComboBox;
    private javax.swing.JLabel colorLabel;
    private javax.swing.JButton colorSelectButton;
    private javax.swing.JComboBox facingComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JButton newRobot;
    private javax.swing.JTextField numBeepersField;
    private javax.swing.JLabel numRobotLabel;
    private javax.swing.JLabel robotColorLabel;
    private javax.swing.JTextField xPosField;
    private javax.swing.JTextField yPosField;
    
    private int myID;
    private String botClass = null;

    private static final String TEMPLATE_DIRECTORY = "templates";
    private static final String TEMPLATE_NAME = "Template.java";
    
}
